csv_compare_redis - A CSV Comparison Tool using Redis
=====================================================

compare two csv files using an identity column to locate missing rows, 
duplicates, and data mismatches using a Redis server


Usage
=====

$ ./csv_compare file1.txt file2.txt identity_column

This is a Python 2 script.  You may need to change the shebang line
#!/usr/bin/env python2
to your Python 2 interpreter

Or simply run the script with the interpreter
$ python2 ./csv_compare file1.txt file2.txt identity_column
or
$ python ./csv_compare file1.txt file2.txt identity_column

For complete usage instructions, see
$ python ./csv_compare --help


Redis
=====

This tool is to be used with a Redis server instance.

The python libraries used are:

redis-py https://github.com/andymccurdy/redis-py
and
hiredis-py - https://github.com/pietern/hiredis-py

Using hiredis apparently speeds queries up to 10x from the redis-py default.


Memory Usage
============

csv_compare makes some memory optimizations so that usually, it does not
require that you have enough RAM to load both files (or even one file) into
memory at once.

To disable Redis persistence (disk saves), start Redis with all of the
"save" lines commented out in the Redis configuration file.

Redis loads all of the data it uses into memory, so if you are running out of
RAM and SWAP space, create an additional swapfile.  For example, to initialize
an extra 10GB of swap space:

# dd if=/dev/zero bs=1M count=10240 of=./extraswap_file
# mkswap ./extraswap_file
# swapon ./extraswap_file


Output
======
Messages and duplicate IDs is output to stderr.
Rows with mismatched data are written side by side in csv format to stdout.


Author
======

David Davis <davisd@davisd.com>
http://www.davisd.com

